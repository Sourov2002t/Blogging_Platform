/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.104
 * Generated at: 2025-04-20 09:08:18 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.List;
import java.text.SimpleDateFormat;
import com.example.model.Post;

public final class post_002dlist_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(4);
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("com.example.model.Post");
    _jspx_imports_classes.add("java.text.SimpleDateFormat");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("    <title>Blog Posts</title>\r\n");
      out.write("    <style>\r\n");
      out.write("        body {\r\n");
      out.write("            font-family: Arial, sans-serif;\r\n");
      out.write("            line-height: 1.6;\r\n");
      out.write("            margin: 0;\r\n");
      out.write("            padding: 20px;\r\n");
      out.write("            background-color: #f4f4f4;\r\n");
      out.write("        }\r\n");
      out.write("        .container {\r\n");
      out.write("            max-width: 1200px;\r\n");
      out.write("            margin: 0 auto;\r\n");
      out.write("        }\r\n");
      out.write("        h1 {\r\n");
      out.write("            color: #333;\r\n");
      out.write("            text-align: center;\r\n");
      out.write("            margin-bottom: 30px;\r\n");
      out.write("        }\r\n");
      out.write("        .post-list {\r\n");
      out.write("            display: grid;\r\n");
      out.write("            grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\r\n");
      out.write("            gap: 20px;\r\n");
      out.write("        }\r\n");
      out.write("        .post-card {\r\n");
      out.write("            background: #fff;\r\n");
      out.write("            border-radius: 5px;\r\n");
      out.write("            padding: 20px;\r\n");
      out.write("            box-shadow: 0 2px 5px rgba(0,0,0,0.1);\r\n");
      out.write("            transition: transform 0.3s ease;\r\n");
      out.write("        }\r\n");
      out.write("        .post-card:hover {\r\n");
      out.write("            transform: translateY(-5px);\r\n");
      out.write("        }\r\n");
      out.write("        .post-title {\r\n");
      out.write("            margin-top: 0;\r\n");
      out.write("            color: #007bff;\r\n");
      out.write("        }\r\n");
      out.write("        .post-meta {\r\n");
      out.write("            color: #666;\r\n");
      out.write("            font-size: 0.85em;\r\n");
      out.write("            margin-bottom: 10px;\r\n");
      out.write("        }\r\n");
      out.write("        .post-excerpt {\r\n");
      out.write("            margin-bottom: 15px;\r\n");
      out.write("        }\r\n");
      out.write("        .btn {\r\n");
      out.write("            display: inline-block;\r\n");
      out.write("            background: #007bff;\r\n");
      out.write("            color: #fff;\r\n");
      out.write("            border: none;\r\n");
      out.write("            padding: 7px 15px;\r\n");
      out.write("            border-radius: 3px;\r\n");
      out.write("            text-decoration: none;\r\n");
      out.write("            font-size: 14px;\r\n");
      out.write("            cursor: pointer;\r\n");
      out.write("            margin-right: 5px;\r\n");
      out.write("        }\r\n");
      out.write("        .btn-danger {\r\n");
      out.write("            background: #dc3545;\r\n");
      out.write("        }\r\n");
      out.write("        .actions {\r\n");
      out.write("            display: flex;\r\n");
      out.write("            justify-content: space-between;\r\n");
      out.write("            margin-top: 10px;\r\n");
      out.write("        }\r\n");
      out.write("        .header-actions {\r\n");
      out.write("            text-align: right;\r\n");
      out.write("            margin-bottom: 20px;\r\n");
      out.write("        }\r\n");
      out.write("    </style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <div class=\"container\">\r\n");
      out.write("        <h1>Blog Posts</h1>\r\n");
      out.write("        \r\n");
      out.write("        <div class=\"header-actions\">\r\n");
      out.write("            <a href=\"");
      out.print( request.getContextPath() );
      out.write("/posts/new\" class=\"btn\">Create New Post</a>\r\n");
      out.write("        </div>\r\n");
      out.write("        \r\n");
      out.write("        <div class=\"post-list\">\r\n");
      out.write("            ");
 
            List<Post> posts = (List<Post>) request.getAttribute("posts");
            SimpleDateFormat dateFormat = new SimpleDateFormat("MMM dd, yyyy HH:mm");
            
            if (posts != null && !posts.isEmpty()) {
                for (Post post : posts) {
            
      out.write("\r\n");
      out.write("                <div class=\"post-card\">\r\n");
      out.write("                    <h2 class=\"post-title\">");
      out.print( post.getTitle() );
      out.write("</h2>\r\n");
      out.write("                    <div class=\"post-meta\">\r\n");
      out.write("                        <span>By ");
      out.print( post.getAuthor() );
      out.write("</span> |\r\n");
      out.write("                        <span>");
      out.print( dateFormat.format(post.getCreatedDate()) );
      out.write("</span>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"post-excerpt\">\r\n");
      out.write("                        ");
      out.print( post.getContent().length() > 150 ? post.getContent().substring(0, 150) + "..." : post.getContent() );
      out.write("\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"actions\">\r\n");
      out.write("                        <a href=\"");
      out.print( request.getContextPath() );
      out.write("/posts/");
      out.print( post.getId() );
      out.write("\" class=\"btn\">Read More</a>\r\n");
      out.write("                        <div>\r\n");
      out.write("                            <a href=\"");
      out.print( request.getContextPath() );
      out.write("/posts/edit?id=");
      out.print( post.getId() );
      out.write("\" class=\"btn\">Edit</a>\r\n");
      out.write("                            <form method=\"post\" action=\"");
      out.print( request.getContextPath() );
      out.write("/posts\" style=\"display:inline;\">\r\n");
      out.write("                                <input type=\"hidden\" name=\"action\" value=\"delete\">\r\n");
      out.write("                                <input type=\"hidden\" name=\"id\" value=\"");
      out.print( post.getId() );
      out.write("\">\r\n");
      out.write("                                <button type=\"submit\" class=\"btn btn-danger\" onclick=\"return confirm('Are you sure you want to delete this post?')\">Delete</button>\r\n");
      out.write("                            </form>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("            ");
 
                }
            } else {
            
      out.write("\r\n");
      out.write("                <div style=\"grid-column: 1 / -1; text-align: center; padding: 50px;\">\r\n");
      out.write("                    <p>No posts found. Create your first blog post!</p>\r\n");
      out.write("                </div>\r\n");
      out.write("            ");
 } 
      out.write("\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
